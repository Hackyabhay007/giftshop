"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/checkout",{

/***/ "./src/redux/features/order/orderApi.js":
/*!**********************************************!*\
  !*** ./src/redux/features/order/orderApi.js ***!
  \**********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authApi: function() { return /* binding */ authApi; },\n/* harmony export */   useCancelOrderMutation: function() { return /* binding */ useCancelOrderMutation; },\n/* harmony export */   useCreateRazorpayOrderMutation: function() { return /* binding */ useCreateRazorpayOrderMutation; },\n/* harmony export */   useGetUserOrderByIdQuery: function() { return /* binding */ useGetUserOrderByIdQuery; },\n/* harmony export */   useGetUserOrdersQuery: function() { return /* binding */ useGetUserOrdersQuery; },\n/* harmony export */   useSaveOrderMutation: function() { return /* binding */ useSaveOrderMutation; },\n/* harmony export */   useTrackOrderQuery: function() { return /* binding */ useTrackOrderQuery; }\n/* harmony export */ });\n/* harmony import */ var _api_apiSlice__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../api/apiSlice */ \"./src/redux/api/apiSlice.js\");\n/* harmony import */ var _orderSlice__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./orderSlice */ \"./src/redux/features/order/orderSlice.js\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uuid */ \"./node_modules/uuid/dist/esm-browser/index.js\");\n\n\n // Import UUID for generating unique idempotency keys\nconst authApi = _api_apiSlice__WEBPACK_IMPORTED_MODULE_0__.apiSlice.injectEndpoints({\n    overrideExisting: true,\n    endpoints: (builder)=>({\n            createRazorpayOrder: builder.mutation({\n                query: (orderInfo)=>{\n                    console.log(\"order Api\", orderInfo);\n                    const { accessToken, ...rest } = orderInfo;\n                    const idempotencyKey = (0,uuid__WEBPACK_IMPORTED_MODULE_2__.v4)(); // Generate a new UUID as idempotency key\n                    return {\n                        url: \"https://apiv2.mysweetwishes.com/api/initiate-order\",\n                        method: \"POST\",\n                        body: rest,\n                        headers: {\n                            Authorization: \"Bearer \".concat(accessToken),\n                            \"Content-Type\": \"application/json\",\n                            \"Idempotency-Key\": idempotencyKey\n                        }\n                    };\n                },\n                async onQueryStarted (arg, param) {\n                    let { queryFulfilled, dispatch } = param;\n                    try {\n                        const result = await queryFulfilled;\n                        console.log(\"Razorpay order created successfully:\", result.data);\n                        dispatch((0,_orderSlice__WEBPACK_IMPORTED_MODULE_1__.set_client_secret)(result.data.clientSecret));\n                    } catch (error) {\n                        console.error(\"Error creating Razorpay order:\", error);\n                        console.error(\"Error details:\", error.error);\n                    }\n                }\n            }),\n            saveOrder: builder.mutation({\n                query: (data)=>{\n                    const { accessToken, ...rest } = data;\n                    const idempotencyKey = (0,uuid__WEBPACK_IMPORTED_MODULE_2__.v4)(); // Generate a new UUID as idempotency key\n                    return {\n                        url: \"https://apiv2.mysweetwishes.com/api/initiate-order\",\n                        method: \"POST\",\n                        body: rest,\n                        headers: {\n                            Authorization: \"Bearer \".concat(accessToken),\n                            \"Content-Type\": \"application/json\",\n                            \"Idempotency-Key\": idempotencyKey\n                        }\n                    };\n                },\n                invalidatesTags: [\n                    \"UserOrders\"\n                ],\n                async onQueryStarted (arg, param) {\n                    let { queryFulfilled } = param;\n                    try {\n                        const result = await queryFulfilled;\n                        if (result.data) {\n                            localStorage.removeItem(\"couponInfo\");\n                            localStorage.removeItem(\"cart_products\");\n                            localStorage.removeItem(\"shipping_info\");\n                        }\n                    } catch (error) {\n                        console.error(\"Error saving order:\", error);\n                    }\n                }\n            }),\n            getUserOrders: builder.query({\n                query: (param)=>{\n                    let { accessToken, page = 1 } = param;\n                    return {\n                        url: \"https://apiv2.mysweetwishes.com/api/user/orders?page=\".concat(page),\n                        headers: {\n                            Authorization: \"Bearer \".concat(accessToken)\n                        }\n                    };\n                },\n                providesTags: [\n                    \"UserOrders\"\n                ],\n                keepUnusedDataFor: 600\n            }),\n            getUserOrderById: builder.query({\n                query: (param)=>{\n                    let { id, accessToken } = param;\n                    return {\n                        url: \"https://apiv2.mysweetwishes.com/api/orders/\".concat(id),\n                        headers: {\n                            Authorization: \"Bearer \".concat(accessToken)\n                        }\n                    };\n                },\n                providesTags: (result, error, arg)=>[\n                        {\n                            type: \"UserOrder\",\n                            id: arg.id\n                        }\n                    ],\n                keepUnusedDataFor: 600\n            }),\n            cancelOrder: builder.mutation({\n                query: (param)=>{\n                    let { order_id, accessToken } = param;\n                    return {\n                        url: \"https://apiv2.mysweetwishes.com/api/cancel-order\",\n                        method: \"POST\",\n                        body: {\n                            order_id\n                        },\n                        headers: {\n                            Authorization: \"Bearer \".concat(accessToken),\n                            \"Content-Type\": \"application/json\"\n                        }\n                    };\n                },\n                invalidatesTags: [\n                    \"UserOrders\"\n                ]\n            }),\n            trackOrder: builder.query({\n                query: (param)=>{\n                    let { orderId, accessToken } = param;\n                    return {\n                        url: \"https://apiv2.mysweetwishes.com/api/orders/\".concat(orderId, \"/track\"),\n                        headers: {\n                            Authorization: \"Bearer \".concat(accessToken)\n                        }\n                    };\n                },\n                providesTags: (result, error, arg)=>[\n                        {\n                            type: \"OrderTrack\",\n                            id: arg.orderId\n                        }\n                    ],\n                keepUnusedDataFor: 600\n            })\n        })\n});\nconst { useCreateRazorpayOrderMutation, useSaveOrderMutation, useGetUserOrderByIdQuery, useGetUserOrdersQuery, useCancelOrderMutation, useTrackOrderQuery } = authApi;\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/redux/features/order/orderApi.js\n"));

/***/ })

});